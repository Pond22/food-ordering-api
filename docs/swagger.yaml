basePath: /
definitions:
  api_handlers.OrderItemRequest:
    properties:
      menu_item_id:
        type: integer
      notes:
        type: string
      quantity:
        type: integer
    type: object
  api_handlers.OrderRequest:
    properties:
      items:
        items:
          $ref: '#/definitions/api_handlers.OrderItemRequest'
        type: array
      table_id:
        type: integer
      uuid:
        type: string
    type: object
  models.Category:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.CreateCategoryRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.CreateMenuRequest:
    properties:
      CategoryID:
        minimum: 1
        type: integer
      Name:
        maxLength: 100
        minLength: 2
        type: string
      Price:
        minimum: 1
        type: integer
      description:
        maxLength: 255
        type: string
      image:
        description: max 5MB
        items:
          type: integer
        maxItems: 5242880
        type: array
    required:
    - CategoryID
    - Name
    - Price
    type: object
  models.MenuItem:
    properties:
      category:
        allOf:
        - $ref: '#/definitions/models.Category'
        description: ลิงก์ไปยังตาราง Category
      categoryID:
        description: foreign key ที่เชื่อมกับ Category
        type: integer
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        description: ฟิลด์ Image เป็น type bytea
        items:
          type: integer
        type: array
      name:
        type: string
      price:
        type: integer
      updatedAt:
        type: string
    type: object
  models.Order:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      status:
        description: e.g., "pending", "cooking", "served", "completed"
        type: string
      tableID:
        description: Foreign key to Table
        type: integer
      total:
        type: number
      updatedAt:
        type: string
    type: object
  models.OrderItem:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      menuItem:
        $ref: '#/definitions/models.MenuItem'
      menuItemID:
        description: Foreign key to MenuItem
        type: integer
      notes:
        description: Special instructions
        type: string
      order:
        $ref: '#/definitions/models.Order'
      orderID:
        description: Foreign key to Order
        type: integer
      price:
        description: Price at time of order
        type: number
      quantity:
        type: integer
      status:
        description: e.g., "pending", "cooking", "served"
        type: string
      updatedAt:
        type: string
    type: object
  models.QRCode:
    properties:
      created_at:
        type: string
      expiry_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      qr_Image:
        items:
          type: integer
        type: array
      table_id:
        description: One-to-One กับ Table
        type: integer
      uuid:
        type: string
    type: object
host: 127.0.0.1:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: https://www.example.com/support
  description: This is a simple API for ordering food.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://example.com/terms
  title: Food Ordering API
  version: "1.0"
paths:
  /add_category:
    post:
      consumes:
      - application/json
      description: ฟังก์ชันนี้ใช้สำหรับสร้างหมวดหมู่ใหม่ โดยต้องระบุข้อมูลชื่อหมวดหมู่
      parameters:
      - description: ข้อมูลหมวดหมู่ใหม่
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: รายละเอียดของหมวดหมู่ที่สร้างเสร็จแล้ว
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: เกิดข้อผิดพลาดจากข้อมูลที่ไม่ถูกต้อง
          schema:
            additionalProperties: true
            type: object
        "500":
          description: เกิดข้อผิดพลาดในการสร้างหมวดหมู่ใหม่
          schema:
            additionalProperties: true
            type: object
      summary: สร้างหมวดหมู่ใหม่
  /add_menu:
    post:
      consumes:
      - application/json
      description: ฟังก์ชันนี้ใช้สำหรับสร้างเมนูใหม่ โดยต้องระบุข้อมูลที่จำเป็นในการสร้าง
        เช่น ชื่อเมนูและ ID ของหมวดหมู่ที่เกี่ยวข้อง
      parameters:
      - description: ข้อมูลเมนูใหม่
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateMenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: รายละเอียดของเมนูที่สร้างเสร็จแล้ว
          schema:
            $ref: '#/definitions/models.MenuItem'
        "400":
          description: เกิดข้อผิดพลาดจากข้อมูลที่ไม่ถูกต้อง
          schema:
            additionalProperties: true
            type: object
        "500":
          description: เกิดข้อผิดพลาดในการสร้างเมนูใหม่
          schema:
            additionalProperties: true
            type: object
      summary: สร้างเมนูใหม่
  /getCategory:
    get:
      description: ฟังก์ชันนี้ใช้สำหรับเรียกข้อมูลหมวดหมู่ทั้งหมดที่มีอยู่ในระบบ
      produces:
      - application/json
      responses:
        "200":
          description: รายการหมวดหมู่ทั้งหมด
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "500":
          description: เกิดข้อผิดพลาดในการดึงข้อมูลหมวดหมู่
          schema:
            additionalProperties: true
            type: object
      summary: เรียกรายการหมวดหมู่ทั้งหมด
  /menu:
    get:
      description: ฟังก์ชันนี้ใช้สำหรับเรียกข้อมูลเมนู โดยสามารถระบุ action ได้ 3
        แบบ
      parameters:
      - description: 'รูปแบบการค้นหาเมนู: getByID, getByCategory หรือ getAll'
        enum:
        - getByID
        - getByCategory
        - getAll
        in: query
        name: action
        required: true
        type: string
      - description: ID ของเมนู (ใช้กับ action=getByID)
        in: query
        name: id
        type: integer
      - description: ID ของหมวดหมู่ (ใช้กับ action=getByCategory)
        in: query
        name: category_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: รายการเมนูที่ค้นพบ
          schema:
            items:
              $ref: '#/definitions/models.MenuItem'
            type: array
        "400":
          description: เกิดข้อผิดพลาดจากการระบุพารามิเตอร์
          schema:
            additionalProperties: true
            type: object
      summary: เลือกการดำเนินการกับข้อมูลเมนู
  /migrate:
    post:
      description: api เส้นนี้ใช้เพื่อ migrate ฐานข้อมูลของ orm
      produces:
      - application/json
      responses: {}
      summary: อัปเดต orm
  /order:
    get:
      description: เข้าสู่โต๊ะนั้นๆ ซึ่ง api เส้นนี้ไม่จำเป็นต้องถูกใช้งานโดยตรงเพราะ
        url ของแต่ละโต๊ะจะสามารถเข้าได้ผ่าน qr_code เท่านั้นจากฟังก์ชัน
      parameters:
      - description: เลขโต๊ะ
        in: query
        name: table
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: รายละเอียดของเมนูที่ค้นพบจากการค้นหา
          schema:
            $ref: '#/definitions/models.MenuItem'
        "400":
          description: เกิดข้อผิดพลาดจาก action ที่ไม่ถูกต้อง
          schema:
            additionalProperties: true
            type: object
      summary: เข้าถึง dynamic link โต๊ะนั้นๆ
    post:
      consumes:
      - application/json
      description: สั่งอาหารสำหรับโต๊ะที่ระบุ
      parameters:
      - description: ข้อมูลการสั่งอาหาร
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/api_handlers.OrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: รายละเอียดออเดอร์ที่สร้าง
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: ข้อมูลไม่ถูกต้อง
          schema:
            additionalProperties: true
            type: object
        "500":
          description: เกิดข้อผิดพลาดในการประมวลผล
          schema:
            additionalProperties: true
            type: object
      summary: สั่งอาหาร......
  /qr_code/{table}:
    get:
      description: เข้าสู่โต๊ะนั้นๆ ซึ่ง api เส้นนี้ไม่จำเป็นต้องถูกใช้งานโดยตรงเพราะ
        url ของแต่ละโต๊ะจะสามารถเข้าได้ผ่าน qr_code เท่านั้นจากฟังก์ชัน
      parameters:
      - description: เลขโต๊ะ
        in: path
        name: table
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: รายละเอียดของตาราง qr_code
          schema:
            $ref: '#/definitions/models.QRCode'
        "400":
          description: เกิดข้อผิดพลาดจาก action ที่ไม่ถูกต้อง
          schema:
            additionalProperties: true
            type: object
      summary: เข้าถึง dynamic link โต๊ะนั้นๆ
schemes:
- http
swagger: "2.0"
